---
import '../style/content.css'
import type { ReadTimeResults } from 'reading-time'
import type { BlogEntry } from '@content/config'
import type { PostMeta as TPostMeta } from '@model/post-meta'
import type { Tag } from '@model/tag'
import { SITE_DESCRIPTION, SITE_TITLE } from '@constant/app'
import Header from '@component/Header.astro'
import PostMeta from '@component/PostMeta.astro'
import Tags from '@component/Tags.astro'
import { convertDash } from '@util/convertDash'
import Page from './Page.astro'
import MainLayout from '../layout/Main.astro'

type Props = Omit<BlogEntry, 'id'> & {
  id: string
  readingTime: ReadTimeResults
}

const { id, slug, data, readingTime } = Astro.props

const postMeta: TPostMeta = {
  ...data,
  readingTime,
  id,
  tags: data.tags || [],
  date: (data.date || data.pubDate)!,
}

const title = `${data.title} Â· ${SITE_TITLE} `
const tags = postMeta.tags?.map<Tag>(tag => ({
  id: convertDash(tag),
  title: tag,
}))
---

<Page
  title={title}
  description={data.description || data.summary || SITE_DESCRIPTION}
  keywords={data.keywords ? data.keywords : []}
  image={new URL(`/posts/${slug}/og-image.png`, Astro.url).href}
>
  <Header />
  <MainLayout>
    <article class="pb-4 pt-32" aria-label="Article Detail">
      <PostMeta meta={postMeta} />
      <div class="flex justify-center px-4">
        <div class="content prose-base max-w-3xl pt-6 font-bodytext" aria-label="Article Content">
          <slot />
        </div>
      </div>
      <div class="mx-auto max-w-3xl">
        {tags && <Tags list={tags} />}
      </div>
    </article>
  </MainLayout>
</Page>
